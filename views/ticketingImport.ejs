<%- include('partials/header') %>

<div class="container-fluid">
  <%- include('partials/ticketingNav') %>

  <div class="d-flex justify-content-between align-items-center mb-3">
    <h1 class="h3 mb-0 text-gray-800"><%= title %></h1>
    <a href="/ticketing/import/bulk" class="btn btn-sm btn-info shadow-sm">
      <i class="bi bi-upload me-1"></i> Bulk Import from CSV
    </a>
  </div>

  <div class="row">
    <div class="col-lg-8">
      <div class="card shadow-sm mb-4">
        <div class="card-header py-3">
          <h6 class="m-0 fw-bold text-primary">Import a Single Past Sale</h6>
        </div>
        <div class="card-body">
          <form action="/ticketing/import" method="POST">
            <div class="row g-3">
              <div class="col-md-4">
                <label for="settlement_date" class="form-label">Settlement Date</label>
                <input type="date" class="form-control" id="settlement_date" name="settlement_date" value="<%= new Date().toISOString().split('T')[0] %>" required>
              </div>
              <div class="col-md-8">
                <label for="ride_id" class="form-label">Ride</label>
                <select id="ride_id" name="ride_id" class="form-select" required>
                  <option value="" disabled selected>Select Ride...</option>
                  <% rides.forEach(ride => { %>
                    <option value="<%= ride.id %>" data-rate="<%= ride.rate %>"><%= ride.name %> (₹<%= ride.rate %>)</option>
                  <% }) %>
                </select>
              </div>
              <div class="col-md-6">
                <label for="tickets_sold" class="form-label">Total Tickets Sold</label>
                <input type="number" class="form-control" id="tickets_sold" name="tickets_sold" required min="1">
              </div>
              <div class="col-md-6">
                <label for="upi_amount" class="form-label">UPI Amount Received (Optional)</label>
                <input type="number" step="0.01" class="form-control" id="upi_amount" name="upi_amount" value="0" min="0">
              </div>
              <div class="col-md-6">
                <label class="form-label">Balance (Cash Amount)</label>
                <input type="text" class="form-control" id="cash_amount_display" readonly>
              </div>
            </div>
            <div class="mt-3">
              <button type="submit" class="btn btn-primary">Import Sale</button>
              <a href="/ticketing" class="btn btn-secondary">Cancel</a>
            </div>
          </form>
        </div>
      </div>
    </div>
    <div class="col-lg-4">
      <div class="card shadow-sm">
        <div class="card-header py-3">
          <h6 class="m-0 fw-bold text-primary">What is this for?</h6>
        </div>
        <div class="card-body">
          <p>This tool allows you to manually enter past ticket sales that were not recorded through the ticket distribution system (e.g., for a missed day).</p>
          <p>Each entry will create a 'Settled' sales record and a corresponding 'Ticket Sales' entry in the accounting ledger.</p>
          <p class="mb-0">This is useful for migrating data from an old system or correcting historical records.</p>
          </div>
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const rateSelect = document.getElementById('ride_id');
    const ticketsSoldInput = document.getElementById('tickets_sold');
    const upiInput = document.getElementById('upi_amount');
    const cashDisplay = document.getElementById('cash_amount_display');

    function calculateRevenue() {
      const selectedRate = parseFloat(rateSelect.options[rateSelect.selectedIndex]?.dataset.rate) || 0;
      const ticketsSold = parseInt(ticketsSoldInput.value) || 0;
      const totalRevenue = selectedRate * ticketsSold;
      const upiAmount = parseFloat(upiInput.value) || 0;
      const cashAmount = totalRevenue - upiAmount;
      cashDisplay.value = '₹' + cashAmount.toLocaleString('en-IN', { minimumFractionDigits: 2, maximumFractionDigits: 2 });
    }

    [rateSelect, ticketsSoldInput, upiInput].forEach(el => el.addEventListener('input', calculateRevenue));
    // Run calculation on page load
    calculateRevenue();
  });
</script>

<%- include('partials/footer') %>